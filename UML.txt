// Cool Class Diagram
// ------------------

// Chain elements like this
[Customer]<>-orders*>[Order]++-0..*>[LineItem]

// Add notes
[Order]-[note: Aggregate Root ala DDD{bg:wheat}]

// Add more detail
[AbstractAlgorithm|getInputData();run()]

[AbstractInputData|double getCost(Arc arc);Graph getGraph();int getMaximumSpeed();AbstractInputData.Mode getMode();boolean isAllowed​(Arc arc)]

[AbstractSolution|AbstractInputData getInputData();java.time.Duration 	 getSolvingTime() ;AbstractSolution.Status getStatus();boolean isFeasible()]

[AlgorithmFactory|static AbstractAlgorithm<?> 	createAlgorithm​(AbstractAlgorithm algorithm, AbstractInputData data);AbstractAlgorithm
getAlgorithmClass​(AbstractAlgorithm baseAlgorithm,String name);String getAlgorithmNames​(AbstractAlgorithm baseAlgorithm); 	registerAlgorithm​(AbstractAlgorithm baseAlgorithm, String name, AbstractAlgorithm algoClass)]
